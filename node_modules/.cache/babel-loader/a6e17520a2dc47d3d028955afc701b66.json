{"ast":null,"code":"import _slicedToArray from\"/Users/FrankyFresh/Desktop/battle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var id=\"\";var sec=\"\";var params=\"?client_id=\".concat(id,\"&client_secret=\").concat(sec);function getErrorMsg(message,username){if(message==='Not Found'){return\"\".concat(username,\" doesn't exist\");}return message;}function getProfile(username){return fetch(\"https://api.github.com/users/\".concat(username).concat(params)).then(function(res){return res.json();}).then(function(profile){if(profile.message){throw new Error(getErrorMsg(profile.message,username));}return profile;});}function getRepos(username){return fetch(\"https://api.github.com/users/\".concat(username,\"/repos\").concat(params,\"&per_page=100\")).then(function(res){return res.json();}).then(function(repos){if(repos.message){throw new Error(getErrorMsg(repos.message,username));}return repos;});}function getStarCount(repos){return repos.reduce(function(count,_ref){var stargazers_count=_ref.stargazers_count;return count+stargazers_count;},0);}function calculateScore(followers,repos){return followers*3+getStarCount(repos);}function getUserData(player){return Promise.all([getProfile(player),getRepos(player)]).then(function(_ref2){var _ref3=_slicedToArray(_ref2,2),profile=_ref3[0],repos=_ref3[1];return{profile:profile,score:calculateScore(profile.followers,repos)};});}function sortPlayers(players){return players.sort(function(a,b){return b.score-a.score;});}export function battle(players){return Promise.all([getUserData(players[0]),getUserData(players[1])]).then(function(results){return sortPlayers(results);});}export function fetchPopularRepos(language){var endpoint=window.encodeURI(\"https://api.github.com/search/repositories?q=stars:>1+language:\".concat(language,\"&sort=stars&order=desc&type=Repositories\"));return fetch(endpoint).then(function(res){return res.json();}).then(function(data){if(!data.items){throw new Error(data.message);}return data.items;});}","map":{"version":3,"sources":["/Users/FrankyFresh/Desktop/battle/src/utils/api.js"],"names":["id","sec","params","getErrorMsg","message","username","getProfile","fetch","then","res","json","profile","Error","getRepos","repos","getStarCount","reduce","count","stargazers_count","calculateScore","followers","getUserData","player","Promise","all","score","sortPlayers","players","sort","a","b","battle","results","fetchPopularRepos","language","endpoint","window","encodeURI","data","items"],"mappings":"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","sourcesContent":["const id = \"\"\nconst sec = \"\"\nconst params = `?client_id=${id}&client_secret=${sec}`\n\nfunction getErrorMsg (message, username) {\n  if (message === 'Not Found') {\n    return `${username} doesn't exist`\n  }\n\n  return message\n}\n\nfunction getProfile (username) {\n  return fetch(`https://api.github.com/users/${username}${params}`)\n    .then((res) => res.json())\n    .then((profile) => {\n      if (profile.message) {\n        throw new Error(getErrorMsg(profile.message, username))\n      }\n\n      return profile\n    })\n}\n\nfunction getRepos (username) {\n  return fetch(`https://api.github.com/users/${username}/repos${params}&per_page=100`)\n    .then((res) => res.json())\n    .then((repos) => {\n      if (repos.message) {\n        throw new Error(getErrorMsg(repos.message, username))\n      }\n\n      return repos\n    })\n}\n\nfunction getStarCount (repos) {\n  return repos.reduce((count, { stargazers_count }) => count + stargazers_count , 0)\n}\n\nfunction calculateScore (followers, repos) {\n  return (followers * 3) + getStarCount(repos)\n}\n\nfunction getUserData (player) {\n  return Promise.all([\n    getProfile(player),\n    getRepos(player)\n  ]).then(([ profile, repos ]) => ({\n    profile,\n    score: calculateScore(profile.followers, repos)\n  }))\n}\n\nfunction sortPlayers (players) {\n  return players.sort((a, b) => b.score - a.score)\n}\n\nexport function battle (players) {\n  return Promise.all([\n    getUserData(players[0]),\n    getUserData(players[1])\n  ]).then((results) => sortPlayers(results))\n}\n\nexport function fetchPopularRepos (language) {\n  const endpoint = window.encodeURI(`https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`)\n\n  return fetch(endpoint)\n    .then((res) => res.json())\n    .then((data) => {\n      if (!data.items) {\n        throw new Error(data.message)\n      }\n\n      return data.items\n    })\n}"]},"metadata":{},"sourceType":"module"}