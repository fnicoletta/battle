{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franky\\\\Desktop\\\\Coding\\\\battle\\\\src\\\\components\\\\results.js\";\nimport React from 'react';\nimport { battle } from '../utils/api.js';\nimport { FaCompass, FaBriefcase, FaUsers, FaUserFriends, FaUser } from 'react-icons/fa';\nimport Card from './card.js';\nimport PropTypes from 'prop-types';\nimport Loading from './loading.js';\nimport Tooltip from './tooltip.js';\nimport queryString from 'query-string';\nimport { Link } from 'react-router';\n\nfunction ProfileList({\n  profile\n}) {\n  return React.createElement(\"ul\", {\n    className: \"card-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(FaUser, {\n    color: \"rgb(239, 115, 115)\",\n    size: 22,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), profile.name), profile.location && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    text: \"User's Location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(FaCompass, {\n    color: \"rgb(144, 115, 255)\",\n    size: 22,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), profile.location)), profile.company && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    text: \"User's Company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FaBriefcase, {\n    color: \"#795548\",\n    size: 22,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), profile.company)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FaUsers, {\n    color: \"rgb(129, 195, 245)\",\n    size: 22,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), profile.followers.toLocaleString(), \" followers\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(FaUserFriends, {\n    color: \"rgb(64, 183, 95)\",\n    size: 22,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), profile.following.toLocaleString(), \" following\"));\n}\n\nProfileList.propsTypes = {\n  profile: PropTypes.object.isRequired\n};\nexport default class Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      winner: null,\n      loser: null,\n      error: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    debugger;\n\n    const _queryString$parse = queryString.parse(this.props.location.search),\n          playerOne = _queryString$parse.playerOne,\n          playerTwo = _queryString$parse.playerTwo;\n\n    battle([playerOne, playerTwo]).then(players => {\n      this.setState({\n        winner: players[0],\n        loser: players[1],\n        error: null,\n        loading: false\n      });\n    }).catch(({\n      message\n    }) => {\n      this.setState({\n        error: message,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          winner = _this$state.winner,\n          loser = _this$state.loser,\n          error = _this$state.error,\n          loading = _this$state.loading;\n\n    if (loading === true) {\n      return React.createElement(Loading, {\n        text: \"Battling\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    }\n\n    if (error) {\n      return React.createElement(\"p\", {\n        className: \"center-text error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, error);\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid space-around container-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Card, {\n      header: winner.score === loser.score ? 'Tie' : 'Winner',\n      subheader: \"Score: \".concat(winner.score.toLocaleString()),\n      avatar: winner.profile.avatar_url,\n      href: winner.profile.html_url,\n      name: winner.profile.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(ProfileList, {\n      profile: winner.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Card, {\n      header: winner.score === loser.score ? 'Tie' : 'Loser',\n      subheader: \"Score: \".concat(loser.score.toLocaleString()),\n      avatar: loser.profile.avatar_url,\n      href: loser.profile.html_url,\n      name: loser.profile.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(ProfileList, {\n      profile: loser.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      to: \"/battle\",\n      className: \"btn dark-btn btn-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Reset\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Franky/Desktop/Coding/battle/src/components/results.js"],"names":["React","battle","FaCompass","FaBriefcase","FaUsers","FaUserFriends","FaUser","Card","PropTypes","Loading","Tooltip","queryString","Link","ProfileList","profile","name","location","company","followers","toLocaleString","following","propsTypes","object","isRequired","Results","Component","constructor","props","state","winner","loser","error","loading","componentDidMount","parse","search","playerOne","playerTwo","then","players","setState","catch","message","render","score","avatar_url","html_url","login"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { battle } from '../utils/api.js'\r\nimport {FaCompass, FaBriefcase, FaUsers, FaUserFriends, FaUser } from 'react-icons/fa'\r\nimport Card from './card.js'\r\nimport PropTypes from 'prop-types'\r\nimport Loading from './loading.js'\r\nimport Tooltip from './tooltip.js'\r\nimport queryString from 'query-string'\r\nimport { Link } from 'react-router'\r\n\r\n\r\nfunction ProfileList({ profile }) {\r\n  return(\r\n    <ul className='card-list'>\r\n              <li>\r\n                <FaUser color='rgb(239, 115, 115)'size={22}/>\r\n                {profile.name}\r\n              </li>\r\n              {profile.location && (\r\n                <li>\r\n                <Tooltip text={`User's Location`}>\r\n                <FaCompass color='rgb(144, 115, 255)' size={22}/>\r\n                {profile.location}\r\n                </Tooltip>\r\n                </li>\r\n                )}\r\n              {profile.company && (\r\n                <li>\r\n                <Tooltip text={`User's Company`}>\r\n                <FaBriefcase color='#795548' size={22}/>\r\n                {profile.company}\r\n                </Tooltip>\r\n                </li>\r\n                )}\r\n              <li>\r\n                <FaUsers color='rgb(129, 195, 245)' size={22}/>\r\n                {profile.followers.toLocaleString()} followers\r\n              </li>\r\n              <li>\r\n                <FaUserFriends color='rgb(64, 183, 95)' size={22}/>\r\n                {profile.following.toLocaleString()} following\r\n              </li>\r\n            </ul>\r\n    )\r\n}\r\n\r\nProfileList.propsTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default class Results extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      winner: null,\r\n      loser: null,\r\n      error: null,\r\n      loading: true\r\n    }\r\n  }\r\n  componentDidMount () {\r\n    debugger\r\n    const { playerOne, playerTwo } = queryString.parse(this.props.location.search)\r\n\r\n    battle([ playerOne, playerTwo ])\r\n      .then((players) => {\r\n        this.setState({\r\n          winner: players[0],\r\n          loser: players[1],\r\n          error: null,\r\n          loading: false\r\n        })\r\n      }).catch(({ message }) => {\r\n        this.setState({\r\n          error: message,\r\n          loading: false\r\n        })\r\n      })\r\n  }\r\n  render() {\r\n    const { winner, loser, error, loading } = this.state\r\n\r\n    if(loading === true) {\r\n      return <Loading text='Battling'/>\r\n    }\r\n\r\n    if(error) {\r\n      return(\r\n        <p className='center-text error'>{error}</p>\r\n        )\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className='grid space-around container-sm'>\r\n          <Card \r\n            header={winner.score === loser.score ? 'Tie' : 'Winner'}\r\n            subheader={`Score: ${winner.score.toLocaleString()}`}\r\n            avatar={winner.profile.avatar_url}\r\n            href={winner.profile.html_url}\r\n            name={winner.profile.login}\r\n          >\r\n            <ProfileList profile={winner.profile} /> \r\n          </Card>   \r\n          <Card \r\n            header={winner.score === loser.score ? 'Tie' : 'Loser'}\r\n            subheader={`Score: ${loser.score.toLocaleString()}`}\r\n            avatar={loser.profile.avatar_url}\r\n            href={loser.profile.html_url}\r\n            name={loser.profile.login}\r\n          >\r\n            <ProfileList profile={loser.profile} /> \r\n          </Card>\r\n        </div>\r\n        <Link\r\n          to='/battle'\r\n          className='btn dark-btn btn-space'>\r\n          Reset\r\n        </Link>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}