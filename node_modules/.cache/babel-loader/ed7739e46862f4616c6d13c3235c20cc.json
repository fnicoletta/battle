{"ast":null,"code":"var _jsxFileName = \"/Users/FrankyFresh/Desktop/battle/src/components/battle.js\";\nimport React from 'react';\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport Results from './results';\nimport { ThemeConsumer } from '../contexts/theme.js';\nimport { Link } from 'react-router-dom';\n\nfunction Instructions() {\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, ({\n    theme\n  }) => React.createElement(\"div\", {\n    className: \"instructions-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"center-text header-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Instructions\"), React.createElement(\"ol\", {\n    className: \"container-sm grid center-text battle-instructions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Enter two Github users\"), React.createElement(FaUserFriends, {\n    className: \"bg-\".concat(theme),\n    color: \"rgb(255, 191, 116)\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Battle\"), React.createElement(FaFighterJet, {\n    className: \"bg-\".concat(theme),\n    color: \"#727272\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"See the winners\"), React.createElement(FaTrophy, {\n    className: \"bg-\".concat(theme),\n    color: \"rgb(255, 215, 0)\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })))));\n}\n\nclass PlayerInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: ''\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.onSubmit(this.state.username);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(ThemeConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, ({\n      theme\n    }) => React.createElement(\"form\", {\n      className: \"column player\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      className: \"player-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.label), React.createElement(\"div\", {\n      className: \"row player-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      className: \"input-\".concat(theme),\n      placeholder: \"github username\",\n      autoComplete: \"off\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn \".concat(theme === 'dark' ? 'light-btn' : 'dark-btn'),\n      type: \"submit\",\n      disabled: !this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nfunction PlayerPreview({\n  username,\n  onReset,\n  label\n}) {\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, ({\n    theme\n  }) => React.createElement(\"div\", {\n    className: \"column player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"player-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, label), React.createElement(\"div\", {\n    className: \"row bg-\".concat(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"player-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"avatar-small\",\n    src: \"https://github.com/\".concat(username, \".png?size=200\"),\n    alt: \"Avatar for \".concat(username),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: \"https://github.com/\".concat(username),\n    className: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, username)), React.createElement(\"button\", {\n    className: \"btn-clear flex-center\",\n    onClick: onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(FaTimesCircle, {\n    color: \"rgb(194, 57, 42)\",\n    size: 26,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })))));\n}\n\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\nexport default class Battle extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playerOne: null,\n      playerTwo: null\n    };\n\n    this.handleSubmit = (id, player) => {\n      this.setState({\n        [id]: player\n      });\n    };\n\n    this.handleReset = id => {\n      this.setState({\n        [id]: null\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          playerOne = _this$state.playerOne,\n          playerTwo = _this$state.playerTwo;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Instructions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"players-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"center-text header-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Players\"), React.createElement(\"div\", {\n      className: \"row space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, playerOne === null ? React.createElement(PlayerInput, {\n      label: \"Player One\",\n      onSubmit: player => this.handleSubmit('playerOne', player),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }) : React.createElement(PlayerPreview, {\n      username: playerOne,\n      label: \"Player One\",\n      onReset: () => this.handleReset('playerOne'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), playerTwo === null ? React.createElement(PlayerInput, {\n      label: \"Player Two\",\n      onSubmit: player => this.handleSubmit('playerTwo', player),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }) : React.createElement(PlayerPreview, {\n      username: playerTwo,\n      label: \"Player Two\",\n      onReset: () => this.handleReset('playerTwo'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), playerOne && playerTwo && React.createElement(Link, {\n      className: \"btn dark-btn btn-space\",\n      to: {\n        pathname: '/battle/results',\n        search: \"?playerOne=\".concat(playerOne, \"&playerTwo=\").concat(playerTwo)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Battle\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/FrankyFresh/Desktop/battle/src/components/battle.js"],"names":["React","FaUserFriends","FaFighterJet","FaTrophy","FaTimesCircle","PropTypes","Results","ThemeConsumer","Link","Instructions","theme","PlayerInput","Component","state","username","handleSubmit","event","preventDefault","props","onSubmit","handleChange","setState","target","value","render","label","propTypes","func","isRequired","string","PlayerPreview","onReset","Battle","playerOne","playerTwo","id","player","handleReset","pathname","search"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from 'react-icons/fa'\nimport PropTypes from 'prop-types'\nimport Results from './results'\nimport { ThemeConsumer } from '../contexts/theme.js'\nimport { Link } from 'react-router-dom'\n\nfunction Instructions () {\n  return (\n    <ThemeConsumer>\n      {({ theme }) => (\n        <div className='instructions-container'>\n        <h1 className='center-text header-lg'>\n          Instructions\n        </h1>\n        <ol className='container-sm grid center-text battle-instructions'>\n          <li>\n            <h3 className='header-sm'>Enter two Github users</h3>\n            <FaUserFriends className={`bg-${theme}`}color='rgb(255, 191, 116)' size={140} />\n          </li>\n          <li>\n            <h3 className='header-sm'>Battle</h3>\n            <FaFighterJet className={`bg-${theme}`}color='#727272' size={140} />\n          </li>\n          <li>\n            <h3 className='header-sm'>See the winners</h3>\n            <FaTrophy className={`bg-${theme}`}color='rgb(255, 215, 0)' size={140} />\n          </li>\n        </ol>\n      </div>\n      )}\n    </ThemeConsumer>\n  )\n}\n\nclass PlayerInput extends React.Component {\n  state = {\n    username: ''\n  }\n  \n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    this.props.onSubmit(this.state.username)\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      username: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <ThemeConsumer>\n        {({ theme }) => (\n          <form className='column player' onSubmit={this.handleSubmit}>\n          <label htmlFor='username' className='player-label'>\n            {this.props.label}\n          </label>\n          <div className='row player-inputs'>\n            <input\n              type='text'\n              id='username'\n              className={`input-${theme}`}\n              placeholder='github username'\n              autoComplete='off'\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n            <button\n              className={`btn ${theme === 'dark' ? 'light-btn' : 'dark-btn'}`}\n              type='submit'\n              disabled={!this.state.username}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n        )}\n      </ThemeConsumer>\n    )\n  }\n}\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n}\n\nfunction PlayerPreview ({ username, onReset, label }) {\n  return (\n    <ThemeConsumer>\n    {({ theme }) => (\n       <div className='column player'>\n        <h3 className='player-label'>{label}</h3>\n        <div className={`row bg-${theme}`}>\n          <div className='player-info'>\n            <img\n              className='avatar-small'\n              src={`https://github.com/${username}.png?size=200`}\n              alt={`Avatar for ${username}`}\n            />\n            <a\n              href={`https://github.com/${username}`}\n              className='link'>\n                {username}\n            </a>\n          </div>\n          <button className='btn-clear flex-center' onClick={onReset}>\n            <FaTimesCircle color='rgb(194, 57, 42)' size={26} />\n          </button>\n        </div>\n      </div>\n      )}\n    </ThemeConsumer>\n  )\n}\n\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n}\n\nexport default class Battle extends React.Component {\n\n    state = {\n      playerOne: null,\n      playerTwo: null,\n    }\n\n  handleSubmit = (id, player) => {\n    this.setState({\n      [id]: player\n    })\n  }\n  handleReset = (id) => {\n    this.setState({\n      [id]: null\n    })\n  }\n  render() {\n    const { playerOne, playerTwo } = this.state\n\n    return (\n      <React.Fragment>\n        <Instructions />\n\n        <div className='players-container'>\n          <h1 className='center-text header-lg'>Players</h1>\n          <div className='row space-around'>\n            {playerOne === null\n              ? <PlayerInput\n                  label='Player One'\n                  onSubmit={(player) => this.handleSubmit('playerOne', player)}\n                />\n              : <PlayerPreview\n                  username={playerOne}\n                  label='Player One'\n                  onReset={() => this.handleReset('playerOne')}\n                />\n            }\n\n            {playerTwo === null\n              ? <PlayerInput\n                  label='Player Two'\n                  onSubmit={(player) => this.handleSubmit('playerTwo', player)}\n                />\n              : <PlayerPreview\n                  username={playerTwo}\n                  label='Player Two'\n                  onReset={() => this.handleReset('playerTwo')}\n                />\n            }\n          </div>\n\n\n          {playerOne && playerTwo && (\n            <Link\n              className='btn dark-btn btn-space'\n              to={{\n                pathname: '/battle/results',\n                search: `?playerOne=${playerOne}&playerTwo=${playerTwo}`\n              }}>\n              Battle\n            </Link>\n          )}\n        </div>\n      </React.Fragment>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}