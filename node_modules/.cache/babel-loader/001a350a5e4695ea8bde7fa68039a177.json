{"ast":null,"code":"var _jsxFileName = \"/Users/FrankyFresh/Desktop/battle2/src/components/results.js\";\nimport React from 'react';\nimport { battle } from '../utils/api';\nimport { FaCompass, FaBriefcase, FaUsers, FaUserFriends, FaCode, FaUser } from 'react-icons/fa';\nimport Card from './card.js';\nimport PropTypes from 'prop-types';\n\nfunction ProfileList({\n  profile\n}) {\n  return React.createElement(\"ul\", {\n    className: \"card-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(FaUser, {\n    color: \"rgb(239, 115, 115)\",\n    size: 22,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), profile.name), profile.location && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(FaCompass, {\n    color: \"rgb(144, 115, 255)\",\n    size: 22,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), profile.location), profile.company && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(FaBriefcase, {\n    color: \"#795548\",\n    size: 22,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), profile.company), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(FaUsers, {\n    color: \"rgb(129, 195, 245)\",\n    size: 22,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), profile.followers.toLocaleString(), \" followers\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(FaUserFriends, {\n    color: \"rgb(64, 183, 95)\",\n    size: 22,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), profile.following.toLocaleString(), \" following\"));\n}\n\nProfileList.propsTypes = {\n  profile: PropTypes.object.isRequired\n};\nexport default class Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      winner: null,\n      loser: null,\n      error: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          playerOne = _this$props.playerOne,\n          playerTwo = _this$props.playerTwo;\n    battle([playerOne, playerTwo]).then(players => {\n      this.setState({\n        winner: players[0],\n        loser: players[1],\n        error: null,\n        loading: false\n      });\n    }).catch(({\n      message\n    }) => {\n      this.setState({\n        error: message,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          winner = _this$state.winner,\n          loser = _this$state.loser,\n          error = _this$state.error,\n          loading = _this$state.loading;\n\n    if (loading === true) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"LOADING\");\n    }\n\n    if (error) {\n      return React.createElement(\"p\", {\n        className: \"center-text error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, error);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"grid space-around container-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Card, {\n      header: winner.score === loser.score ? 'Tie' : 'Winner',\n      subheader: \"Score: \".concat(winner.score.toLocaleString()),\n      avatar: winner.profile.avatar_url,\n      href: winner.profile.html_url,\n      name: winner.profile.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(ProfileList, {\n      profile: winner.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(Card, {\n      header: winner.score === loser.score ? 'Tie' : 'Loser',\n      subheader: \"Score: \".concat(loser.score.toLocaleString()),\n      avatar: loser.profile.avatar_url,\n      href: loser.profile.html_url,\n      name: loser.profile.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(ProfileList, {\n      profile: loser.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\nResults.propTypes = {\n  playerOne: PropTypes.string.isRequired,\n  playerTwo: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/FrankyFresh/Desktop/battle2/src/components/results.js"],"names":["React","battle","FaCompass","FaBriefcase","FaUsers","FaUserFriends","FaCode","FaUser","Card","PropTypes","ProfileList","profile","name","location","company","followers","toLocaleString","following","propsTypes","object","isRequired","Results","Component","constructor","props","state","winner","loser","error","loading","componentDidMount","playerOne","playerTwo","then","players","setState","catch","message","render","score","avatar_url","html_url","login","propTypes","string","onReset","func"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { battle } from '../utils/api'\nimport {FaCompass, FaBriefcase, FaUsers, FaUserFriends, FaCode, FaUser } from 'react-icons/fa'\nimport Card from './card.js'\nimport PropTypes from 'prop-types'\n\nfunction ProfileList({ profile }) {\n  return(\n    <ul className='card-list'>\n              <li>\n                <FaUser color='rgb(239, 115, 115)'size={22}/>\n                {profile.name}\n              </li>\n              {profile.location && (\n                <li>\n                <FaCompass color='rgb(144, 115, 255)' size={22}/>\n                {profile.location}\n                </li>\n                )}\n              {profile.company && (\n                <li>\n                <FaBriefcase color='#795548' size={22}/>\n                {profile.company}\n                </li>\n                )}\n              <li>\n                <FaUsers color='rgb(129, 195, 245)' size={22}/>\n                {profile.followers.toLocaleString()} followers\n              </li>\n              <li>\n                <FaUserFriends color='rgb(64, 183, 95)' size={22}/>\n                {profile.following.toLocaleString()} following\n              </li>\n            </ul>\n    )\n}\n\nProfileList.propsTypes = {\n  profile: PropTypes.object.isRequired,\n}\n\nexport default class Results extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      winner: null,\n      loser: null,\n      error: null,\n      loading: true\n    }\n  }\n  componentDidMount () {\n    const { playerOne, playerTwo } = this.props\n\n    battle([ playerOne, playerTwo ])\n      .then((players) => {\n        this.setState({\n          winner: players[0],\n          loser: players[1],\n          error: null,\n          loading: false\n        })\n      }).catch(({ message }) => {\n        this.setState({\n          error: message,\n          loading: false\n        })\n      })\n  }\n  render() {\n    const { winner, loser, error, loading } = this.state\n\n    if(loading === true) {\n      return <p>LOADING</p>\n    }\n\n    if(error) {\n      return(\n        <p className='center-text error'>{error}</p>\n        )\n    }\n\n    return (\n      <div className='grid space-around container-sm'>\n        <Card \n          header={winner.score === loser.score ? 'Tie' : 'Winner'}\n          subheader={`Score: ${winner.score.toLocaleString()}`}\n          avatar={winner.profile.avatar_url}\n          href={winner.profile.html_url}\n          name={winner.profile.login}\n        >\n          <ProfileList profile={winner.profile} /> \n        </Card>   \n        <Card \n          header={winner.score === loser.score ? 'Tie' : 'Loser'}\n          subheader={`Score: ${loser.score.toLocaleString()}`}\n          avatar={loser.profile.avatar_url}\n          href={loser.profile.html_url}\n          name={loser.profile.login}\n        >\n          <ProfileList profile={loser.profile} /> \n        </Card>\n        </div>\n    )\n  }\n}\n\nResults.propTypes = {\n  playerOne: PropTypes.string.isRequired,\n  playerTwo: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}