{"ast":null,"code":"var _jsxFileName = \"/Users/FrankyFresh/Desktop/battle2/src/components/battle.js\";\nimport React from 'react';\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport Results from './results';\n\nfunction Instructions() {\n  return React.createElement(\"div\", {\n    className: \"instructions-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"center-text header-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Instructions\"), React.createElement(\"ol\", {\n    className: \"container-sm grid center-text battle-instructions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Enter two Github users\"), React.createElement(FaUserFriends, {\n    className: \"bg-light\",\n    color: \"rgb(255, 191, 116)\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Battle\"), React.createElement(FaFighterJet, {\n    className: \"bg-light\",\n    color: \"#727272\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"See the winners\"), React.createElement(FaTrophy, {\n    className: \"bg-light\",\n    color: \"rgb(255, 215, 0)\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))));\n}\n\nclass PlayerInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onSubmit(this.state.username);\n  }\n\n  handleChange(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"column player\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      className: \"player-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.label), React.createElement(\"div\", {\n      className: \"row player-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      className: \"input-light\",\n      placeholder: \"github username\",\n      autoComplete: \"off\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn dark-btn\",\n      type: \"submit\",\n      disabled: !this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nfunction PlayerPreview({\n  username,\n  onReset,\n  label\n}) {\n  return React.createElement(\"div\", {\n    className: \"column player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"player-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, label), React.createElement(\"div\", {\n    className: \"row bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"player-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"avatar-small\",\n    src: \"https://github.com/\".concat(username, \".png?size=200\"),\n    alt: \"Avatar for \".concat(username),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: \"https://github.com/\".concat(username),\n    className: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, username)), React.createElement(\"button\", {\n    className: \"btn-clear flex-center\",\n    onClick: onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(FaTimesCircle, {\n    color: \"rgb(194, 57, 42)\",\n    size: 26,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))));\n}\n\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\nexport default class Battle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerOne: null,\n      playerTwo: null,\n      battle: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleSubmit(id, player) {\n    this.setState({\n      [id]: player\n    });\n  }\n\n  handleReset(id) {\n    this.setState({\n      [id]: null\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          playerOne = _this$state.playerOne,\n          playerTwo = _this$state.playerTwo,\n          battle = _this$state.battle;\n\n    if (battle === true) {\n      return React.createElement(Results, {\n        playerOne: playerOne,\n        playerTwo: playerTwo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Instructions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"players-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"center-text header-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Players\"), React.createElement(\"div\", {\n      className: \"row space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, playerOne === null ? React.createElement(PlayerInput, {\n      label: \"Player One\",\n      onSubmit: player => this.handleSubmit('playerOne', player),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }) : React.createElement(PlayerPreview, {\n      username: playerOne,\n      label: \"Player One\",\n      onReset: () => this.handleReset('playerOne'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), playerTwo === null ? React.createElement(PlayerInput, {\n      label: \"Player Two\",\n      onSubmit: player => this.handleSubmit('playerTwo', player),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }) : React.createElement(PlayerPreview, {\n      username: playerTwo,\n      label: \"Player Two\",\n      onReset: () => this.handleReset('playerTwo'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), playerOne && playerTwo && React.createElement(\"button\", {\n      className: \"btn dark-btn btn-space\",\n      onClick: () => this.setState({\n        battle: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Battle\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/FrankyFresh/Desktop/battle2/src/components/battle.js"],"names":["React","FaUserFriends","FaFighterJet","FaTrophy","FaTimesCircle","PropTypes","Results","Instructions","PlayerInput","Component","constructor","props","state","username","handleSubmit","bind","handleChange","event","preventDefault","onSubmit","setState","target","value","render","label","propTypes","func","isRequired","string","PlayerPreview","onReset","Battle","playerOne","playerTwo","battle","handleReset","id","player"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from 'react-icons/fa'\nimport PropTypes from 'prop-types'\nimport Results from './results'\n\nfunction Instructions () {\n  return (\n    <div className='instructions-container'>\n      <h1 className='center-text header-lg'>\n        Instructions\n      </h1>\n      <ol className='container-sm grid center-text battle-instructions'>\n        <li>\n          <h3 className='header-sm'>Enter two Github users</h3>\n          <FaUserFriends className='bg-light' color='rgb(255, 191, 116)' size={140} />\n        </li>\n        <li>\n          <h3 className='header-sm'>Battle</h3>\n          <FaFighterJet className='bg-light' color='#727272' size={140} />\n        </li>\n        <li>\n          <h3 className='header-sm'>See the winners</h3>\n          <FaTrophy className='bg-light' color='rgb(255, 215, 0)' size={140} />\n        </li>\n      </ol>\n    </div>\n  )\n}\n\nclass PlayerInput extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      username: ''\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleSubmit(event) {\n    event.preventDefault()\n\n    this.props.onSubmit(this.state.username)\n  }\n  handleChange(event) {\n    this.setState({\n      username: event.target.value\n    })\n  }\n  render() {\n    return (\n      <form className='column player' onSubmit={this.handleSubmit}>\n        <label htmlFor='username' className='player-label'>\n          {this.props.label}\n        </label>\n        <div className='row player-inputs'>\n          <input\n            type='text'\n            id='username'\n            className='input-light'\n            placeholder='github username'\n            autoComplete='off'\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <button\n            className='btn dark-btn'\n            type='submit'\n            disabled={!this.state.username}\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    )\n  }\n}\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n}\n\nfunction PlayerPreview ({ username, onReset, label }) {\n  return (\n    <div className='column player'>\n      <h3 className='player-label'>{label}</h3>\n      <div className='row bg-light'>\n        <div className='player-info'>\n          <img\n            className='avatar-small'\n            src={`https://github.com/${username}.png?size=200`}\n            alt={`Avatar for ${username}`}\n          />\n          <a\n            href={`https://github.com/${username}`}\n            className='link'>\n              {username}\n          </a>\n        </div>\n        <button className='btn-clear flex-center' onClick={onReset}>\n          <FaTimesCircle color='rgb(194, 57, 42)' size={26} />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n}\n\nexport default class Battle extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      playerOne: null,\n      playerTwo: null,\n      battle: false\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleReset = this.handleReset.bind(this)\n  }\n  handleSubmit(id, player) {\n    this.setState({\n      [id]: player\n    })\n  }\n  handleReset(id) {\n    this.setState({\n      [id]: null\n    })\n  }\n  render() {\n    const { playerOne, playerTwo, battle } = this.state\n\n    if (battle === true) {\n      return <Results playerOne={playerOne} playerTwo={playerTwo} />\n    }\n\n    return (\n      <React.Fragment>\n        <Instructions />\n\n        <div className='players-container'>\n          <h1 className='center-text header-lg'>Players</h1>\n          <div className='row space-around'>\n            {playerOne === null\n              ? <PlayerInput\n                  label='Player One'\n                  onSubmit={(player) => this.handleSubmit('playerOne', player)}\n                />\n              : <PlayerPreview\n                  username={playerOne}\n                  label='Player One'\n                  onReset={() => this.handleReset('playerOne')}\n                />\n            }\n\n            {playerTwo === null\n              ? <PlayerInput\n                  label='Player Two'\n                  onSubmit={(player) => this.handleSubmit('playerTwo', player)}\n                />\n              : <PlayerPreview\n                  username={playerTwo}\n                  label='Player Two'\n                  onReset={() => this.handleReset('playerTwo')}\n                />\n            }\n          </div>\n\n\n          {playerOne && playerTwo && (\n            <button\n              className='btn dark-btn btn-space'\n              onClick={() => this.setState({battle: true})}\n            >\n              Battle\n            </button>\n          )}\n        </div>\n      </React.Fragment>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}