{"ast":null,"code":"import _defineProperty from\"/Users/FrankyFresh/Desktop/battle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/FrankyFresh/Desktop/battle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/FrankyFresh/Desktop/battle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/FrankyFresh/Desktop/battle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/FrankyFresh/Desktop/battle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/FrankyFresh/Desktop/battle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import{fetchPopularRepos}from'../utils/api';import{FaUser,FaStar,FaCodeBranch,FaExclamationTriangle}from'react-icons/fa';import Card from'./card.js';import Loading from'./loading.js';import Tooltip from'./tooltip.js';function LangaugesNav(_ref){var selected=_ref.selected,onUpdateLanguage=_ref.onUpdateLanguage;var languages=['All','JavaScript','Ruby','Java','CSS','Python'];return React.createElement(\"ul\",{className:\"flex-center\"},languages.map(function(language){return React.createElement(\"li\",{key:language},React.createElement(\"button\",{className:\"btn-clear nav-link\",style:language===selected?{color:'rgb(187, 46, 31)'}:null,onClick:function onClick(){return onUpdateLanguage(language);}},language));}));}function ReposGrid(_ref2){var repos=_ref2.repos;return React.createElement(\"ul\",{className:\"grid space-around\"},repos.map(function(repo,index){var owner=repo.owner,html_url=repo.html_url,stargazers_count=repo.stargazers_count,forks=repo.forks,open_issues=repo.open_issues;var login=owner.login,avatar_url=owner.avatar_url;return React.createElement(\"li\",{key:html_url},React.createElement(Card,{header:\"#\".concat(index+1),avatar:avatar_url,href:html_url,name:login},React.createElement(\"ul\",{className:\"card-list\"},React.createElement(\"li\",null,React.createElement(Tooltip,{text:\"Github Username\"},React.createElement(FaUser,{color:\"rgb(255, 191, 116)\",size:22}),React.createElement(\"a\",{href:\"https://github.com/\".concat(login)},login))),React.createElement(\"li\",null,React.createElement(FaStar,{color:\"rgb(255, 215, 0)\",size:22}),stargazers_count.toLocaleString(),\" stars\"),React.createElement(\"li\",null,React.createElement(FaCodeBranch,{color:\"rgb(129, 195, 245)\",size:22}),forks.toLocaleString(),\" forks\"),React.createElement(\"li\",null,React.createElement(FaExclamationTriangle,{color:\"rgb(241, 138, 147)\",size:22}),open_issues.toLocaleString(),\" open\"))));}));}var Popular=/*#__PURE__*/function(_React$Component){_inherits(Popular,_React$Component);function Popular(){var _getPrototypeOf2;var _this;_classCallCheck(this,Popular);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Popular)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={selectedLanguage:'All',repos:{},error:null};_this.updateLanguage=function(selectedLanguage){_this.setState({selectedLanguage:selectedLanguage,error:null});if(!_this.state.repos[selectedLanguage]){fetchPopularRepos(selectedLanguage).then(function(data){_this.setState(function(_ref3){var repos=_ref3.repos;return{repos:_objectSpread({},repos,_defineProperty({},selectedLanguage,data))};});}).catch(function(){console.warn('Error fetching repos: ',_this.state.error);_this.setState({error:\"There was an error fetching the repositories.\"});});}};_this.isLoading=function(){var _this$state=_this.state,selectedLanguage=_this$state.selectedLanguage,repos=_this$state.repos,error=_this$state.error;return!repos[selectedLanguage]&&error===null;};return _this;}_createClass(Popular,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateLanguage(this.state.selectedLanguage);}},{key:\"render\",value:function render(){var _this$state2=this.state,selectedLanguage=_this$state2.selectedLanguage,repos=_this$state2.repos,error=_this$state2.error;return React.createElement(React.Fragment,null,React.createElement(LangaugesNav,{selected:selectedLanguage,onUpdateLanguage:this.updateLanguage}),this.isLoading()&&React.createElement(Loading,{text:\"Fetching Repos\"}),error&&React.createElement(\"p\",{className:\"center-text error\"},error),repos[selectedLanguage]&&React.createElement(ReposGrid,{repos:repos[selectedLanguage]}));}}]);return Popular;}(React.Component);export{Popular as default};","map":{"version":3,"sources":["/Users/FrankyFresh/Desktop/battle/src/components/popular.js"],"names":["React","fetchPopularRepos","FaUser","FaStar","FaCodeBranch","FaExclamationTriangle","Card","Loading","Tooltip","LangaugesNav","selected","onUpdateLanguage","languages","map","language","color","ReposGrid","repos","repo","index","owner","html_url","stargazers_count","forks","open_issues","login","avatar_url","toLocaleString","Popular","state","selectedLanguage","error","updateLanguage","setState","then","data","catch","console","warn","isLoading","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { fetchPopularRepos } from '../utils/api'\nimport { FaUser, FaStar, FaCodeBranch, FaExclamationTriangle } from 'react-icons/fa'\nimport Card from './card.js'\nimport Loading from './loading.js'\nimport Tooltip from './tooltip.js'\n\nfunction LangaugesNav ({ selected, onUpdateLanguage }) {\n  const languages = ['All', 'JavaScript', 'Ruby', 'Java', 'CSS', 'Python']\n\n  return (\n    <ul className='flex-center'>\n      {languages.map((language) => (\n        <li key={language}>\n          <button\n            className='btn-clear nav-link'\n            style={language === selected ? { color: 'rgb(187, 46, 31)' } : null}\n            onClick={() => onUpdateLanguage(language)}>\n            {language}\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nLangaugesNav.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onUpdateLanguage: PropTypes.func.isRequired\n}\n\nfunction ReposGrid ({ repos }) {\n  return (\n    <ul className='grid space-around'>\n      {repos.map((repo, index) => {\n        const { owner, html_url, stargazers_count, forks, open_issues } = repo\n        const { login, avatar_url } = owner\n\n        return (\n          <li key={html_url}>\n            <Card\n              header={`#${index + 1}`}\n              avatar={avatar_url}\n              href={html_url}\n              name={login}\n            >\n              <ul className='card-list'>\n              <li>\n                <Tooltip text={`Github Username`}>\n                <FaUser color='rgb(255, 191, 116)' size={22} />\n                <a href={`https://github.com/${login}`}>\n                  {login}\n                </a>\n                </Tooltip>\n              </li>\n              <li>\n                <FaStar color='rgb(255, 215, 0)' size={22} />\n                {stargazers_count.toLocaleString()} stars\n              </li>\n              <li>\n                <FaCodeBranch color='rgb(129, 195, 245)' size={22} />\n                {forks.toLocaleString()} forks\n              </li>\n              <li>\n                <FaExclamationTriangle color='rgb(241, 138, 147)' size={22} />\n                {open_issues.toLocaleString()} open\n              </li>\n            </ul>\n          </Card>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nReposGrid.propTypes = {\n  repos: PropTypes.array.isRequired\n}\n\nexport default class Popular extends React.Component {\n  state = {\n      selectedLanguage: 'All',\n      repos: {},\n      error: null,\n    }\n\n  componentDidMount () {\n    this.updateLanguage(this.state.selectedLanguage)\n  }\n  updateLanguage = (selectedLanguage) => {\n    this.setState({\n      selectedLanguage,\n      error: null,\n    })\n\n    if (!this.state.repos[selectedLanguage]) {\n      fetchPopularRepos(selectedLanguage)\n        .then((data) => {\n          this.setState(({ repos }) => ({\n            repos: {\n              ...repos,\n              [selectedLanguage]: data\n            }\n          }))\n        })\n        .catch(() => {\n          console.warn('Error fetching repos: ', this.state.error)\n\n          this.setState({\n            error: `There was an error fetching the repositories.`\n          })\n        })\n    }\n  }\n  isLoading = () => {\n    const { selectedLanguage, repos, error } = this.state\n\n    return !repos[selectedLanguage] && error === null\n  }\n  render() {\n    const { selectedLanguage, repos, error } = this.state\n\n    return (\n      <React.Fragment>\n        <LangaugesNav\n          selected={selectedLanguage}\n          onUpdateLanguage={this.updateLanguage}\n        />\n\n        {this.isLoading() && <Loading text='Fetching Repos'/>}\n\n        {error && <p className='center-text error'>{error}</p>}\n\n        {repos[selectedLanguage] && <ReposGrid repos={repos[selectedLanguage]} />}\n      </React.Fragment>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}