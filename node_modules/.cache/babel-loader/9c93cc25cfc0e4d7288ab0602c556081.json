{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franky\\\\Desktop\\\\Coding\\\\battle\\\\src\\\\components\\\\battle.js\";\nimport React from 'react';\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport Results from './results';\nimport { ThemeConsumer } from '../contexts/theme.js';\n\nfunction Instructions() {\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, ({\n    theme\n  }) => React.createElement(\"div\", {\n    className: \"instructions-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"center-text header-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Instructions\"), React.createElement(\"ol\", {\n    className: \"container-sm grid center-text battle-instructions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Enter two Github users\"), React.createElement(FaUserFriends, {\n    className: \"bg-\".concat(theme),\n    color: \"rgb(255, 191, 116)\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Battle\"), React.createElement(FaFighterJet, {\n    className: \"bg-\".concat(theme),\n    color: \"#727272\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"See the winners\"), React.createElement(FaTrophy, {\n    className: \"bg-\".concat(theme),\n    color: \"rgb(255, 215, 0)\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })))));\n}\n\nclass PlayerInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onSubmit(this.state.username);\n  }\n\n  handleChange(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(ThemeConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, ({\n      theme\n    }) => React.createElement(\"form\", {\n      className: \"column player\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      className: \"player-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.label), React.createElement(\"div\", {\n      className: \"row player-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      className: \"input-\".concat(theme),\n      placeholder: \"github username\",\n      autoComplete: \"off\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn \".concat(theme === 'dark' ? 'light-btn' : 'dark-btn'),\n      type: \"submit\",\n      disabled: !this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nfunction PlayerPreview({\n  username,\n  onReset,\n  label\n}) {\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, ({\n    theme\n  }) => React.createElement(\"div\", {\n    className: \"column player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"player-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, label), React.createElement(\"div\", {\n    className: \"row bg-\".concat(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"player-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"avatar-small\",\n    src: \"https://github.com/\".concat(username, \".png?size=200\"),\n    alt: \"Avatar for \".concat(username),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: \"https://github.com/\".concat(username),\n    className: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, username)), React.createElement(\"button\", {\n    className: \"btn-clear flex-center\",\n    onClick: onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(FaTimesCircle, {\n    color: \"rgb(194, 57, 42)\",\n    size: 26,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))));\n}\n\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\nexport default class Battle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerOne: null,\n      playerTwo: null,\n      battle: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleSubmit(id, player) {\n    this.setState({\n      [id]: player\n    });\n  }\n\n  handleReset(id) {\n    this.setState({\n      [id]: null\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          playerOne = _this$state.playerOne,\n          playerTwo = _this$state.playerTwo,\n          battle = _this$state.battle;\n\n    if (battle === true) {\n      return React.createElement(Results, {\n        playerOne: playerOne,\n        playerTwo: playerTwo,\n        onReset: () => this.setState({\n          playerOne: null,\n          playerTwo: null,\n          battle: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Instructions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"players-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"center-text header-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Players\"), React.createElement(\"div\", {\n      className: \"row space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, playerOne === null ? React.createElement(PlayerInput, {\n      label: \"Player One\",\n      onSubmit: player => this.handleSubmit('playerOne', player),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }) : React.createElement(PlayerPreview, {\n      username: playerOne,\n      label: \"Player One\",\n      onReset: () => this.handleReset('playerOne'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), playerTwo === null ? React.createElement(PlayerInput, {\n      label: \"Player Two\",\n      onSubmit: player => this.handleSubmit('playerTwo', player),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }) : React.createElement(PlayerPreview, {\n      username: playerTwo,\n      label: \"Player Two\",\n      onReset: () => this.handleReset('playerTwo'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), playerOne && playerTwo && React.createElement(\"button\", {\n      className: \"btn dark-btn btn-space\",\n      onClick: () => this.setState({\n        battle: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Battle\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Franky/Desktop/Coding/battle/src/components/battle.js"],"names":["React","FaUserFriends","FaFighterJet","FaTrophy","FaTimesCircle","PropTypes","Results","ThemeConsumer","Instructions","theme","PlayerInput","Component","constructor","props","state","username","handleSubmit","bind","handleChange","event","preventDefault","onSubmit","setState","target","value","render","label","propTypes","func","isRequired","string","PlayerPreview","onReset","Battle","playerOne","playerTwo","battle","handleReset","id","player"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from 'react-icons/fa'\r\nimport PropTypes from 'prop-types'\r\nimport Results from './results'\r\nimport { ThemeConsumer } from '../contexts/theme.js'\r\n\r\nfunction Instructions () {\r\n  return (\r\n    <ThemeConsumer>\r\n      {({ theme }) => (\r\n        <div className='instructions-container'>\r\n        <h1 className='center-text header-lg'>\r\n          Instructions\r\n        </h1>\r\n        <ol className='container-sm grid center-text battle-instructions'>\r\n          <li>\r\n            <h3 className='header-sm'>Enter two Github users</h3>\r\n            <FaUserFriends className={`bg-${theme}`}color='rgb(255, 191, 116)' size={140} />\r\n          </li>\r\n          <li>\r\n            <h3 className='header-sm'>Battle</h3>\r\n            <FaFighterJet className={`bg-${theme}`}color='#727272' size={140} />\r\n          </li>\r\n          <li>\r\n            <h3 className='header-sm'>See the winners</h3>\r\n            <FaTrophy className={`bg-${theme}`}color='rgb(255, 215, 0)' size={140} />\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      )}\r\n    </ThemeConsumer>\r\n  )\r\n}\r\n\r\nclass PlayerInput extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      username: ''\r\n    }\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n\r\n    this.props.onSubmit(this.state.username)\r\n  }\r\n  handleChange(event) {\r\n    this.setState({\r\n      username: event.target.value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <ThemeConsumer>\r\n        {({ theme }) => (\r\n          <form className='column player' onSubmit={this.handleSubmit}>\r\n          <label htmlFor='username' className='player-label'>\r\n            {this.props.label}\r\n          </label>\r\n          <div className='row player-inputs'>\r\n            <input\r\n              type='text'\r\n              id='username'\r\n              className={`input-${theme}`}\r\n              placeholder='github username'\r\n              autoComplete='off'\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n            <button\r\n              className={`btn ${theme === 'dark' ? 'light-btn' : 'dark-btn'}`}\r\n              type='submit'\r\n              disabled={!this.state.username}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n        )}\r\n      </ThemeConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nPlayerInput.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired\r\n}\r\n\r\nfunction PlayerPreview ({ username, onReset, label }) {\r\n  return (\r\n    <ThemeConsumer>\r\n    {({ theme }) => (\r\n       <div className='column player'>\r\n        <h3 className='player-label'>{label}</h3>\r\n        <div className={`row bg-${theme}`}>\r\n          <div className='player-info'>\r\n            <img\r\n              className='avatar-small'\r\n              src={`https://github.com/${username}.png?size=200`}\r\n              alt={`Avatar for ${username}`}\r\n            />\r\n            <a\r\n              href={`https://github.com/${username}`}\r\n              className='link'>\r\n                {username}\r\n            </a>\r\n          </div>\r\n          <button className='btn-clear flex-center' onClick={onReset}>\r\n            <FaTimesCircle color='rgb(194, 57, 42)' size={26} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </ThemeConsumer>\r\n  )\r\n}\r\n\r\nPlayerPreview.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  onReset: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired\r\n}\r\n\r\nexport default class Battle extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      playerOne: null,\r\n      playerTwo: null,\r\n      battle: false\r\n    }\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.handleReset = this.handleReset.bind(this)\r\n  }\r\n  handleSubmit(id, player) {\r\n    this.setState({\r\n      [id]: player\r\n    })\r\n  }\r\n  handleReset(id) {\r\n    this.setState({\r\n      [id]: null\r\n    })\r\n  }\r\n  render() {\r\n    const { playerOne, playerTwo, battle } = this.state\r\n\r\n    if (battle === true) {\r\n      return (\r\n        <Results \r\n          playerOne={playerOne} \r\n          playerTwo={playerTwo} \r\n          onReset={() => this.setState({\r\n            playerOne: null,\r\n            playerTwo: null,\r\n            battle: false,\r\n          })}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Instructions />\r\n\r\n        <div className='players-container'>\r\n          <h1 className='center-text header-lg'>Players</h1>\r\n          <div className='row space-around'>\r\n            {playerOne === null\r\n              ? <PlayerInput\r\n                  label='Player One'\r\n                  onSubmit={(player) => this.handleSubmit('playerOne', player)}\r\n                />\r\n              : <PlayerPreview\r\n                  username={playerOne}\r\n                  label='Player One'\r\n                  onReset={() => this.handleReset('playerOne')}\r\n                />\r\n            }\r\n\r\n            {playerTwo === null\r\n              ? <PlayerInput\r\n                  label='Player Two'\r\n                  onSubmit={(player) => this.handleSubmit('playerTwo', player)}\r\n                />\r\n              : <PlayerPreview\r\n                  username={playerTwo}\r\n                  label='Player Two'\r\n                  onReset={() => this.handleReset('playerTwo')}\r\n                />\r\n            }\r\n          </div>\r\n\r\n\r\n          {playerOne && playerTwo && (\r\n            <button\r\n              className='btn dark-btn btn-space'\r\n              onClick={() => this.setState({battle: true})}\r\n            >\r\n              Battle\r\n            </button>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}